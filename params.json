{"name":"Apjsonmapping","tagline":"NSObject category that allows you to easily map your objects to JSON and parse it back.","body":"# APJSONMapping\r\n\r\n[![Join the chat at https://gitter.im/alexkrzyzanowski/APJSONMapping](https://badges.gitter.im/alexkrzyzanowski/APJSONMapping.svg)](https://gitter.im/alexkrzyzanowski/APJSONMapping?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n[![Build Status](https://travis-ci.org/alexkrzyzanowski/APJSONMapping.svg?branch=master)](https://travis-ci.org/alexkrzyzanowski/APJSONMapping)\r\n[![CocoaPods](https://img.shields.io/cocoapods/v/APJSONMapping.svg)](https://cocoapods.org/pods/APJSONMapping)\r\n[![CocoaPods](https://img.shields.io/cocoapods/metrics/doc-percent/APJSONMapping.svg)](https://cocoapods.org/pods/APJSONMapping)\r\n[![codecov.io](https://codecov.io/github/alexkrzyzanowski/APJSONMapping/coverage.svg?branch=develop)](https://codecov.io/github/alexkrzyzanowski/APJSONMapping?branch=develop)\r\n\r\nAn Objective-C class extension which allows you to easily map your objects to JSON string and parse your objects back from JSON.\r\n\r\n## Installation\r\n\r\nThe easiest way to get `APJSONMapping` is to install it via CocoaPods:\r\n\r\n```Podfile\r\ntarget 'MyApp' do\r\n  pod 'APJSONMapping', '~> 1.0'\r\nend\r\n```\r\n\r\nWhen the framework installed, just import it to add appropriate functionality to your existing classes:\r\n\r\n```objective-c\r\n@import APJSONMapping;\r\n\r\n@interface MyCustomClass : NSObject\r\n// ...\r\n@end\r\n```\r\n\r\n## Usage Example\r\n\r\nTo make your object able to be mapped to (and parsed from) JSON, you have to describe it's mapping rules:\r\n\r\n```objective-c\r\n@import Foundation;\r\n@import APJSONMapping;\r\n\r\n//\r\n// Here is interface\r\n@interface MyCustomClass : NSObject\r\n\r\n@property (nonatomic, strong) NSNumber *someNumber;\r\n@property (nonatomic, strong) NSString *someString;\r\n\r\n+ (Class)someArrayOfRelatingObjectsType;\r\n@end\r\n\r\n//\r\n// And here is implementation\r\n@implementation MyCustomClass\r\n\r\n+ (NSMutableDictionary *)ap_objectMapping {\r\n  NSMutableDictionary * mapping = [super ap_objectMapping];\r\n  if (mapping) {\r\n    NSDictionary * objectMapping = @{ @\"someNumber\": @\"some_number\",\r\n                                      @\"someString\": @\"some_string\"};\r\n    [mapping addEntriesFromDictionary:objectMapping];\r\n  }\r\n  return mapping;\r\n}\r\n\r\n@end\r\n```\r\n\r\nSince you've described the mapping, you can map your object to JSON and parse it back:\r\n\r\n```objective-c\r\nMyCustomClass *myObject = [[MyCustomClass alloc] init];\r\nmyObject.someNumber = @112;\r\nmyObject.someString = @\"testString\";\r\n\r\nNSString *json = [myObject ap_mapToJSONString]; // { \"some_number\": 112, \"some_string\": \"testString\" }\r\nMyCustomClass *anotherObject = [[MyCustomClass alloc] initWithJSONString_ap:json];\r\n```\r\n\r\n## Code Coverage\r\n\r\n![codecov.io](https://codecov.io/github/alexkrzyzanowski/APJSONMapping/branch.svg?branch=develop)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}